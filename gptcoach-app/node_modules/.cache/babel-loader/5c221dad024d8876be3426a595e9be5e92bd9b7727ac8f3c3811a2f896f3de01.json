{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/ChatGPTMonitor.js\nimport { useEffect } from 'react';\nimport { usePromptContext } from '../contexts/PromptContext';\nconst ChatGPTMonitor = () => {\n  _s();\n  const {\n    setCurrentPrompt\n  } = usePromptContext();\n  useEffect(() => {\n    const handlePromptMessage = event => {\n      // This receives messages from ANY source, including our Tampermonkey script\n      if (event.data && event.data.type === 'CHATGPT_PROMPT') {\n        setCurrentPrompt(event.data.content);\n      }\n    };\n    window.addEventListener('message', handlePromptMessage);\n    return () => window.removeEventListener('message', handlePromptMessage);\n  }, [setCurrentPrompt]);\n  return null; // This component doesn't render anything\n};\n_s(ChatGPTMonitor, \"3EfztLu9oa/DMPHCCpVdztPePAU=\", false, function () {\n  return [usePromptContext];\n});\n_c = ChatGPTMonitor;\nexport default ChatGPTMonitor;\nvar _c;\n$RefreshReg$(_c, \"ChatGPTMonitor\");","map":{"version":3,"names":["useEffect","usePromptContext","ChatGPTMonitor","_s","setCurrentPrompt","handlePromptMessage","event","data","type","content","window","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["/Users/arjunverma/Documents/GitHub/GPTCoach/gptcoach-app/src/components/ChatGPTMonitor.js"],"sourcesContent":["// src/components/ChatGPTMonitor.js\nimport { useEffect } from 'react';\nimport { usePromptContext } from '../contexts/PromptContext';\n\nconst ChatGPTMonitor = () => {\n    const { setCurrentPrompt } = usePromptContext();\n    \n    useEffect(() => {\n        const handlePromptMessage = (event) => {\n            // This receives messages from ANY source, including our Tampermonkey script\n            if (event.data && event.data.type === 'CHATGPT_PROMPT') {\n                setCurrentPrompt(event.data.content);\n            }\n        };\n        \n        window.addEventListener('message', handlePromptMessage);\n        return () => window.removeEventListener('message', handlePromptMessage);\n    }, [setCurrentPrompt]);\n    \n    return null; // This component doesn't render anything\n};\n\nexport default ChatGPTMonitor;\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,gBAAgB,QAAQ,2BAA2B;AAE5D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAiB,CAAC,GAAGH,gBAAgB,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZ,MAAMK,mBAAmB,GAAIC,KAAK,IAAK;MACnC;MACA,IAAIA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACC,IAAI,KAAK,gBAAgB,EAAE;QACpDJ,gBAAgB,CAACE,KAAK,CAACC,IAAI,CAACE,OAAO,CAAC;MACxC;IACJ,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEN,mBAAmB,CAAC;IACvD,OAAO,MAAMK,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEP,mBAAmB,CAAC;EAC3E,CAAC,EAAE,CAACD,gBAAgB,CAAC,CAAC;EAEtB,OAAO,IAAI,CAAC,CAAC;AACjB,CAAC;AAACD,EAAA,CAhBID,cAAc;EAAA,QACaD,gBAAgB;AAAA;AAAAY,EAAA,GAD3CX,cAAc;AAkBpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}