{"ast":null,"code":"var _jsxFileName = \"/Users/arjunverma/Documents/GitHub/GPTCoach/gptcoach-app/src/components/FeedbackModal.js\",\n  _s = $RefreshSig$();\n// src/components/FeedbackModal.js\nimport React, { useEffect } from 'react';\nimport { usePromptContext } from '../contexts/PromptContext';\nimport './FeedbackModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackModal = () => {\n  _s();\n  const {\n    evaluation,\n    showFeedback,\n    setShowFeedback\n  } = usePromptContext();\n  useEffect(() => {\n    if (showFeedback) {\n      // Auto-hide feedback after 10 seconds\n      const timer = setTimeout(() => {\n        setShowFeedback(false);\n      }, 10000);\n      return () => clearTimeout(timer);\n    }\n  }, [showFeedback, setShowFeedback]);\n  if (!showFeedback || !evaluation) return null;\n  const {\n    rating,\n    explanation\n  } = evaluation;\n\n  // Determine feedback content based on rating\n  let title, message, className;\n  switch (rating) {\n    case 0:\n      title = \"Learning Opportunity\";\n      message = \"Consider investing time in learning the basics first. Try asking about fundamental concepts or request explanations rather than direct solutions.\";\n      className = \"feedback-low\";\n      break;\n    case 1:\n      title = \"Good Start\";\n      message = \"Your prompt shows potential! To improve learning outcomes, try being more specific about what you want to understand, not just what you want to accomplish.\";\n      className = \"feedback-mid\";\n      break;\n    case 2:\n      title = \"Excellent Prompt!\";\n      message = \"Great job crafting a learning-focused prompt. You're on the right track to getting meaningful insights and developing deeper understanding.\";\n      className = \"feedback-high\";\n      break;\n    default:\n      title = \"Prompt Feedback\";\n      message = \"We've analyzed your prompt. Consider how you might focus more on learning concepts than just getting answers.\";\n      className = \"feedback-mid\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `feedback-modal ${className}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: () => setShowFeedback(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"explanation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-stars\",\n          children: [...Array(3)].map((_, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: i <= rating ? 'star filled' : 'star',\n            children: \"\\u2605\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"rating-label\",\n          children: rating === 0 ? 'Answer-seeking' : rating === 1 ? 'Developing' : 'Learning-focused'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(FeedbackModal, \"V9KG/eYmovdO9rMFxQvrfkBNWbE=\", false, function () {\n  return [usePromptContext];\n});\n_c = FeedbackModal;\nexport default FeedbackModal;\nvar _c;\n$RefreshReg$(_c, \"FeedbackModal\");","map":{"version":3,"names":["React","useEffect","usePromptContext","jsxDEV","_jsxDEV","FeedbackModal","_s","evaluation","showFeedback","setShowFeedback","timer","setTimeout","clearTimeout","rating","explanation","title","message","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","i","_c","$RefreshReg$"],"sources":["/Users/arjunverma/Documents/GitHub/GPTCoach/gptcoach-app/src/components/FeedbackModal.js"],"sourcesContent":["// src/components/FeedbackModal.js\nimport React, { useEffect } from 'react';\nimport { usePromptContext } from '../contexts/PromptContext';\nimport './FeedbackModal.css';\n\nconst FeedbackModal = () => {\n    const { evaluation, showFeedback, setShowFeedback } = usePromptContext();\n    \n    useEffect(() => {\n        if (showFeedback) {\n            // Auto-hide feedback after 10 seconds\n            const timer = setTimeout(() => {\n                setShowFeedback(false);\n            }, 10000);\n            \n            return () => clearTimeout(timer);\n        }\n    }, [showFeedback, setShowFeedback]);\n    \n    if (!showFeedback || !evaluation) return null;\n    \n    const { rating, explanation } = evaluation;\n    \n    // Determine feedback content based on rating\n    let title, message, className;\n    \n    switch (rating) {\n        case 0:\n            title = \"Learning Opportunity\";\n            message = \"Consider investing time in learning the basics first. Try asking about fundamental concepts or request explanations rather than direct solutions.\";\n            className = \"feedback-low\";\n            break;\n        case 1:\n            title = \"Good Start\";\n            message = \"Your prompt shows potential! To improve learning outcomes, try being more specific about what you want to understand, not just what you want to accomplish.\";\n            className = \"feedback-mid\";\n            break;\n        case 2:\n            title = \"Excellent Prompt!\";\n            message = \"Great job crafting a learning-focused prompt. You're on the right track to getting meaningful insights and developing deeper understanding.\";\n            className = \"feedback-high\";\n            break;\n        default:\n            title = \"Prompt Feedback\";\n            message = \"We've analyzed your prompt. Consider how you might focus more on learning concepts than just getting answers.\";\n            className = \"feedback-mid\";\n    }\n    \n    return (\n        <div className=\"feedback-overlay\">\n            <div className={`feedback-modal ${className}`}>\n                <button className=\"close-btn\" onClick={() => setShowFeedback(false)}>×</button>\n                <h2>{title}</h2>\n                <p className=\"feedback-message\">{message}</p>\n                {explanation && (\n                    <div className=\"explanation\">\n                        <h3>Analysis</h3>\n                        <p>{explanation}</p>\n                    </div>\n                )}\n                <div className=\"rating-display\">\n                    <div className=\"rating-stars\">\n                        {[...Array(3)].map((_, i) => (\n                            <span key={i} className={i <= rating ? 'star filled' : 'star'}>★</span>\n                        ))}\n                    </div>\n                    <p className=\"rating-label\">\n                        {rating === 0 ? 'Answer-seeking' : rating === 1 ? 'Developing' : 'Learning-focused'}\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FeedbackModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}