{"ast":null,"code":"var _jsxFileName = \"/Users/arjunverma/Documents/GitHub/GPTCoach/gptcoach-app/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js (Updated)\nimport React from 'react';\nimport { PromptProvider, usePromptContext } from './contexts/PromptContext';\nimport ChatGPTMonitor from './components/ChatGPTMonitor';\nimport FeedbackModal from './components/FeedbackModal';\nimport PromptEvaluator from './components/PromptEvaluator';\nimport './App.css';\n\n// Separate component for test area that will be inside the PromptProvider\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestArea = () => {\n  _s();\n  const [testPrompt, setTestPrompt] = React.useState('');\n  const {\n    setCurrentPrompt\n  } = usePromptContext();\n  const handleSubmitTestPrompt = () => {\n    if (testPrompt.trim()) {\n      window.postMessage({\n        type: 'CHATGPT_PROMPT',\n        content: testPrompt\n      }, '*');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Your Prompts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Simulate entering a ChatGPT prompt to see the feedback:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter a test prompt here...\",\n      value: testPrompt,\n      onChange: e => setTestPrompt(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitTestPrompt,\n      children: \"Submit Test Prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TestArea, \"5xERfqz7YOpvGl7BqrXJ1CPJOrI=\", false, function () {\n  return [usePromptContext];\n});\n_c = TestArea;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(PromptProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ChatGPT Prompt Coach\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your assistant for better, learning-focused prompts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChatGPTMonitor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PromptEvaluator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FeedbackModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TestArea, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"TestArea\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","PromptProvider","usePromptContext","ChatGPTMonitor","FeedbackModal","PromptEvaluator","jsxDEV","_jsxDEV","TestArea","_s","testPrompt","setTestPrompt","useState","setCurrentPrompt","handleSubmitTestPrompt","trim","window","postMessage","type","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c","App","_c2","$RefreshReg$"],"sources":["/Users/arjunverma/Documents/GitHub/GPTCoach/gptcoach-app/src/App.js"],"sourcesContent":["// src/App.js (Updated)\nimport React from 'react';\nimport { PromptProvider, usePromptContext } from './contexts/PromptContext';\nimport ChatGPTMonitor from './components/ChatGPTMonitor';\nimport FeedbackModal from './components/FeedbackModal';\nimport PromptEvaluator from './components/PromptEvaluator';\nimport './App.css';\n\n// Separate component for test area that will be inside the PromptProvider\nconst TestArea = () => {\n  const [testPrompt, setTestPrompt] = React.useState('');\n  const { setCurrentPrompt } = usePromptContext();\n  \n  const handleSubmitTestPrompt = () => {\n      if (testPrompt.trim()) {\n          window.postMessage({\n              type: 'CHATGPT_PROMPT',\n              content: testPrompt\n          }, '*');\n      }\n  };\n\n  return (\n    <div className=\"test-area\">\n        <h2>Test Your Prompts</h2>\n        <p>Simulate entering a ChatGPT prompt to see the feedback:</p>\n        <textarea \n            placeholder=\"Enter a test prompt here...\"\n            value={testPrompt}\n            onChange={(e) => setTestPrompt(e.target.value)}\n        />\n        <button onClick={handleSubmitTestPrompt}>Submit Test Prompt</button>\n    </div>\n  );\n};\n\nfunction App() {\n    return (\n        <PromptProvider>\n            <div className=\"app\">\n                <header className=\"app-header\">\n                    <h1>ChatGPT Prompt Coach</h1>\n                    <p>Your assistant for better, learning-focused prompts</p>\n                </header>\n                \n                {/* Monitors ChatGPT for prompts */}\n                <ChatGPTMonitor />\n                \n                {/* Handles prompt evaluation */}\n                <PromptEvaluator />\n                \n                {/* Shows feedback when available */}\n                <FeedbackModal />\n                \n                {/* For testing purposes */}\n                <TestArea />\n            </div>\n        </PromptProvider>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}