{"ast":null,"code":"// src/services/geminiService.js\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\n\n// Initialize the API with your key\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\nexport const evaluatePrompt = async promptText => {\n  try {\n    const model = genAI.getGenerativeModel({\n      model: \"gemini-1.5-pro\"\n    });\n\n    // Crafting instruction for Gemini to evaluate the prompt\n    const instruction = `\n        Evaluate the following ChatGPT prompt and categorize it based on its learning focus:\n        \n        Prompt: \"${promptText}\"\n        \n        Rate the prompt on a scale:\n        0 - Simply fishing for answers without learning engagement\n        1 - Mid-level attempt, somewhat focused on learning but could be improved\n        2 - Good prompt that clearly demonstrates intent to learn\n        \n        Return only the numeric rating (0, 1, or 2) and a brief explanation.\n        `;\n    const result = await model.generateContent(instruction);\n    const response = result.response.text();\n\n    // Parse the response to extract the rating\n    const ratingMatch = response.match(/^([0-2])/);\n    const rating = ratingMatch ? parseInt(ratingMatch[1]) : 1;\n\n    // Extract explanation (everything after the rating)\n    const explanation = response.replace(/^[0-2]\\s*[-:]*\\s*/, '').trim();\n    return {\n      rating,\n      explanation\n    };\n  } catch (error) {\n    console.error(\"Error evaluating prompt with Gemini:\", error);\n    return {\n      rating: 1,\n      explanation: \"Unable to evaluate the prompt at this time.\"\n    };\n  }\n};","map":{"version":3,"names":["GoogleGenerativeAI","genAI","process","env","REACT_APP_GEMINI_API_KEY","evaluatePrompt","promptText","model","getGenerativeModel","instruction","result","generateContent","response","text","ratingMatch","match","rating","parseInt","explanation","replace","trim","error","console"],"sources":["/Users/arjunverma/Documents/GitHub/GPTCoach/gptcoach-app/src/services/geminiService.js"],"sourcesContent":["// src/services/geminiService.js\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\n\n// Initialize the API with your key\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\nexport const evaluatePrompt = async (promptText) => {\n    try {\n        const model = genAI.getGenerativeModel({ model: \"gemini-1.5-pro\" });\n        \n        // Crafting instruction for Gemini to evaluate the prompt\n        const instruction = `\n        Evaluate the following ChatGPT prompt and categorize it based on its learning focus:\n        \n        Prompt: \"${promptText}\"\n        \n        Rate the prompt on a scale:\n        0 - Simply fishing for answers without learning engagement\n        1 - Mid-level attempt, somewhat focused on learning but could be improved\n        2 - Good prompt that clearly demonstrates intent to learn\n        \n        Return only the numeric rating (0, 1, or 2) and a brief explanation.\n        `;\n        \n        const result = await model.generateContent(instruction);\n        const response = result.response.text();\n        \n        // Parse the response to extract the rating\n        const ratingMatch = response.match(/^([0-2])/);\n        const rating = ratingMatch ? parseInt(ratingMatch[1]) : 1;\n        \n        // Extract explanation (everything after the rating)\n        const explanation = response.replace(/^[0-2]\\s*[-:]*\\s*/, '').trim();\n        \n        return {\n            rating,\n            explanation\n        };\n    } catch (error) {\n        console.error(\"Error evaluating prompt with Gemini:\", error);\n        return {\n            rating: 1,\n            explanation: \"Unable to evaluate the prompt at this time.\"\n        };\n    }\n};\n"],"mappings":"AAAA;AACA,SAASA,kBAAkB,QAAQ,uBAAuB;;AAE1D;AACA,MAAMC,KAAK,GAAG,IAAID,kBAAkB,CAACE,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAC;AAE1E,OAAO,MAAMC,cAAc,GAAG,MAAOC,UAAU,IAAK;EAChD,IAAI;IACA,MAAMC,KAAK,GAAGN,KAAK,CAACO,kBAAkB,CAAC;MAAED,KAAK,EAAE;IAAiB,CAAC,CAAC;;IAEnE;IACA,MAAME,WAAW,GAAG;AAC5B;AACA;AACA,mBAAmBH,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;IAED,MAAMI,MAAM,GAAG,MAAMH,KAAK,CAACI,eAAe,CAACF,WAAW,CAAC;IACvD,MAAMG,QAAQ,GAAGF,MAAM,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC;;IAEvC;IACA,MAAMC,WAAW,GAAGF,QAAQ,CAACG,KAAK,CAAC,UAAU,CAAC;IAC9C,MAAMC,MAAM,GAAGF,WAAW,GAAGG,QAAQ,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;;IAEzD;IACA,MAAMI,WAAW,GAAGN,QAAQ,CAACO,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;IAEpE,OAAO;MACHJ,MAAM;MACNE;IACJ,CAAC;EACL,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,OAAO;MACHL,MAAM,EAAE,CAAC;MACTE,WAAW,EAAE;IACjB,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}