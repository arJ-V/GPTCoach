{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/usePromptEvaluation.js\nimport { useState, useEffect } from 'react';\nimport { evaluatePrompt } from '../services/geminiService';\nimport { usePromptContext } from '../contexts/PromptContext';\nexport const usePromptEvaluation = () => {\n  _s();\n  const {\n    currentPrompt,\n    setEvaluation,\n    setShowFeedback\n  } = usePromptContext();\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const performEvaluation = async () => {\n      if (!currentPrompt) return;\n      setIsEvaluating(true);\n      setError(null);\n      try {\n        const result = await evaluatePrompt(currentPrompt);\n        setEvaluation(result);\n        setShowFeedback(true);\n      } catch (err) {\n        setError(err.message);\n        console.error(\"Error during prompt evaluation:\", err);\n      } finally {\n        setIsEvaluating(false);\n      }\n    };\n    if (currentPrompt) {\n      performEvaluation();\n    }\n  }, [currentPrompt, setEvaluation, setShowFeedback]);\n  return {\n    isEvaluating,\n    error\n  };\n};\n_s(usePromptEvaluation, \"7suOVdJxyXB5YeGwmEt0shC0MS8=\", false, function () {\n  return [usePromptContext];\n});","map":{"version":3,"names":["useState","useEffect","evaluatePrompt","usePromptContext","usePromptEvaluation","_s","currentPrompt","setEvaluation","setShowFeedback","isEvaluating","setIsEvaluating","error","setError","performEvaluation","result","err","message","console"],"sources":["/Users/arjunverma/Documents/GitHub/GPTCoach/gptcoach-app/src/hooks/usePromptEvaluation.js"],"sourcesContent":["// src/hooks/usePromptEvaluation.js\nimport { useState, useEffect } from 'react';\nimport { evaluatePrompt } from '../services/geminiService';\nimport { usePromptContext } from '../contexts/PromptContext';\n\nexport const usePromptEvaluation = () => {\n    const { currentPrompt, setEvaluation, setShowFeedback } = usePromptContext();\n    const [isEvaluating, setIsEvaluating] = useState(false);\n    const [error, setError] = useState(null);\n    \n    useEffect(() => {\n        const performEvaluation = async () => {\n            if (!currentPrompt) return;\n            \n            setIsEvaluating(true);\n            setError(null);\n            \n            try {\n                const result = await evaluatePrompt(currentPrompt);\n                setEvaluation(result);\n                setShowFeedback(true);\n            } catch (err) {\n                setError(err.message);\n                console.error(\"Error during prompt evaluation:\", err);\n            } finally {\n                setIsEvaluating(false);\n            }\n        };\n        \n        if (currentPrompt) {\n            performEvaluation();\n        }\n    }, [currentPrompt, setEvaluation, setShowFeedback]);\n    \n    return { isEvaluating, error };\n};\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,gBAAgB,QAAQ,2BAA2B;AAE5D,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC,aAAa;IAAEC,aAAa;IAAEC;EAAgB,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAC5E,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI,CAACP,aAAa,EAAE;MAEpBI,eAAe,CAAC,IAAI,CAAC;MACrBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACA,MAAME,MAAM,GAAG,MAAMZ,cAAc,CAACI,aAAa,CAAC;QAClDC,aAAa,CAACO,MAAM,CAAC;QACrBN,eAAe,CAAC,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACVH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC;QACrBC,OAAO,CAACN,KAAK,CAAC,iCAAiC,EAAEI,GAAG,CAAC;MACzD,CAAC,SAAS;QACNL,eAAe,CAAC,KAAK,CAAC;MAC1B;IACJ,CAAC;IAED,IAAIJ,aAAa,EAAE;MACfO,iBAAiB,CAAC,CAAC;IACvB;EACJ,CAAC,EAAE,CAACP,aAAa,EAAEC,aAAa,EAAEC,eAAe,CAAC,CAAC;EAEnD,OAAO;IAAEC,YAAY;IAAEE;EAAM,CAAC;AAClC,CAAC;AAACN,EAAA,CA9BWD,mBAAmB;EAAA,QAC8BD,gBAAgB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}